package com.edexer.model;

// Generated Feb 13, 2015 8:24:16 AM by Hibernate Tools 3.6.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "edexer")
public class User implements java.io.Serializable {

	private Integer userId;
	private UserStatus userStatus;
	private Role role;
	private String userEmail;
	private String firstName;
	private String lastName;
	private String password;
	private String mobile;
	private String phone;
	private String title;
	private String activationStr;
	private Set userSubscriptionsForSubscriptionOwner = new HashSet(0);
	private Set userSubscriptionsForUserId = new HashSet(0);
	private Set userSubscriptionsForLastEditBy = new HashSet(0);

	public User() {
	}

	public User(String userEmail, String password) {
		this.userEmail = userEmail;
		this.password = password;
	}

	public User(UserStatus userStatus, Role role, String userEmail,
			String firstName, String lastName, String password, String mobile,
			String phone, String title, String activationStr,
			Set userSubscriptionsForSubscriptionOwner,
			Set userSubscriptionsForUserId, Set userSubscriptionsForLastEditBy) {
		this.userStatus = userStatus;
		this.role = role;
		this.userEmail = userEmail;
		this.firstName = firstName;
		this.lastName = lastName;
		this.password = password;
		this.mobile = mobile;
		this.phone = phone;
		this.title = title;
		this.activationStr = activationStr;
		this.userSubscriptionsForSubscriptionOwner = userSubscriptionsForSubscriptionOwner;
		this.userSubscriptionsForUserId = userSubscriptionsForUserId;
		this.userSubscriptionsForLastEditBy = userSubscriptionsForLastEditBy;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "user_id", unique = true, nullable = false)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "status")
	public UserStatus getUserStatus() {
		return this.userStatus;
	}

	public void setUserStatus(UserStatus userStatus) {
		this.userStatus = userStatus;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "roleid")
	public Role getRole() {
		return this.role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	@Column(name = "user_email", nullable = false, length = 50)
	public String getUserEmail() {
		return this.userEmail;
	}

	public void setUserEmail(String userEmail) {
		this.userEmail = userEmail;
	}

	@Column(name = "first_name", length = 50)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name", length = 50)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "password", nullable = false, length = 50)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "mobile", length = 20)
	public String getMobile() {
		return this.mobile;
	}

	public void setMobile(String mobile) {
		this.mobile = mobile;
	}

	@Column(name = "phone", length = 20)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "title", length = 75)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "activation_str", length = 200)
	public String getActivationStr() {
		return this.activationStr;
	}

	public void setActivationStr(String activationStr) {
		this.activationStr = activationStr;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userBySubscriptionOwner")
	public Set getUserSubscriptionsForSubscriptionOwner() {
		return this.userSubscriptionsForSubscriptionOwner;
	}

	public void setUserSubscriptionsForSubscriptionOwner(
			Set userSubscriptionsForSubscriptionOwner) {
		this.userSubscriptionsForSubscriptionOwner = userSubscriptionsForSubscriptionOwner;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByUserId")
	public Set getUserSubscriptionsForUserId() {
		return this.userSubscriptionsForUserId;
	}

	public void setUserSubscriptionsForUserId(Set userSubscriptionsForUserId) {
		this.userSubscriptionsForUserId = userSubscriptionsForUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByLastEditBy")
	public Set getUserSubscriptionsForLastEditBy() {
		return this.userSubscriptionsForLastEditBy;
	}

	public void setUserSubscriptionsForLastEditBy(
			Set userSubscriptionsForLastEditBy) {
		this.userSubscriptionsForLastEditBy = userSubscriptionsForLastEditBy;
	}

	@Override
	public boolean equals(Object obj) {
		if (!(obj instanceof User))
			return false;
		if (this.getUserId() == ((User) obj).getUserId())
			return true;
		return false;
	}
}
