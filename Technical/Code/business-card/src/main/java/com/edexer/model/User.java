package com.edexer.model;

// Generated May 2, 2015 10:45:02 AM by Hibernate Tools 3.6.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "edexer")
public class User implements java.io.Serializable {

	private Integer userId;
	private UserStatus userStatus;
	private PrivacyLevel privacyLevel;
	private Role role;
	private String userEmail;
	private String firstName;
	private String lastName;
	private String password;
	private String salt;
	private String mobile;
	private String phone;
	private String title;
	private String activationStr;
	private String rememberme;
	private Set passwordResets = new HashSet(0);
	private Set bcRequestsForSenderUserId = new HashSet(0);
	private Set userSubscriptionsForSubscriptionOwner = new HashSet(0);
	private Set bcRequestsForReciverUserId = new HashSet(0);
	private Set mailConfigs = new HashSet(0);
	private Set userSubscriptionsForUserId = new HashSet(0);
	private Set userSubscriptionsForLastEditBy = new HashSet(0);

	public User() {
	}

	public User(String userEmail, String password) {
		this.userEmail = userEmail;
		this.password = password;
	}

	public User(UserStatus userStatus, PrivacyLevel privacyLevel, Role role,
			String userEmail, String firstName, String lastName,
			String password, String salt, String mobile, String phone,
			String title, String activationStr, String rememberme,
			Set passwordResets, Set bcRequestsForSenderUserId,
			Set userSubscriptionsForSubscriptionOwner,
			Set bcRequestsForReciverUserId, Set mailConfigs,
			Set userSubscriptionsForUserId, Set userSubscriptionsForLastEditBy) {
		this.userStatus = userStatus;
		this.privacyLevel = privacyLevel;
		this.role = role;
		this.userEmail = userEmail;
		this.firstName = firstName;
		this.lastName = lastName;
		this.password = password;
		this.salt = salt;
		this.mobile = mobile;
		this.phone = phone;
		this.title = title;
		this.activationStr = activationStr;
		this.rememberme = rememberme;
		this.passwordResets = passwordResets;
		this.bcRequestsForSenderUserId = bcRequestsForSenderUserId;
		this.userSubscriptionsForSubscriptionOwner = userSubscriptionsForSubscriptionOwner;
		this.bcRequestsForReciverUserId = bcRequestsForReciverUserId;
		this.mailConfigs = mailConfigs;
		this.userSubscriptionsForUserId = userSubscriptionsForUserId;
		this.userSubscriptionsForLastEditBy = userSubscriptionsForLastEditBy;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "user_id", unique = true, nullable = false)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "status")
	public UserStatus getUserStatus() {
		return this.userStatus;
	}

	public void setUserStatus(UserStatus userStatus) {
		this.userStatus = userStatus;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "privacy_level_id")
	public PrivacyLevel getPrivacyLevel() {
		return this.privacyLevel;
	}

	public void setPrivacyLevel(PrivacyLevel privacyLevel) {
		this.privacyLevel = privacyLevel;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "roleid")
	public Role getRole() {
		return this.role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	@Column(name = "user_email", nullable = false, length = 50)
	public String getUserEmail() {
		return this.userEmail;
	}

	public void setUserEmail(String userEmail) {
		this.userEmail = userEmail;
	}

	@Column(name = "first_name", length = 50)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name", length = 50)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "password", nullable = false, length = 50)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "salt", length = 50)
	public String getSalt() {
		return this.salt;
	}

	public void setSalt(String salt) {
		this.salt = salt;
	}

	@Column(name = "mobile", length = 20)
	public String getMobile() {
		return this.mobile;
	}

	public void setMobile(String mobile) {
		this.mobile = mobile;
	}

	@Column(name = "phone", length = 20)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "title", length = 75)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "activation_str", length = 200)
	public String getActivationStr() {
		return this.activationStr;
	}

	public void setActivationStr(String activationStr) {
		this.activationStr = activationStr;
	}

	@Column(name = "rememberme", length = 45)
	public String getRememberme() {
		return this.rememberme;
	}

	public void setRememberme(String rememberme) {
		this.rememberme = rememberme;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set getPasswordResets() {
		return this.passwordResets;
	}

	public void setPasswordResets(Set passwordResets) {
		this.passwordResets = passwordResets;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userBySenderUserId")
	public Set getBcRequestsForSenderUserId() {
		return this.bcRequestsForSenderUserId;
	}

	public void setBcRequestsForSenderUserId(Set bcRequestsForSenderUserId) {
		this.bcRequestsForSenderUserId = bcRequestsForSenderUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userBySubscriptionOwner")
	public Set getUserSubscriptionsForSubscriptionOwner() {
		return this.userSubscriptionsForSubscriptionOwner;
	}

	public void setUserSubscriptionsForSubscriptionOwner(
			Set userSubscriptionsForSubscriptionOwner) {
		this.userSubscriptionsForSubscriptionOwner = userSubscriptionsForSubscriptionOwner;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByReciverUserId")
	public Set getBcRequestsForReciverUserId() {
		return this.bcRequestsForReciverUserId;
	}

	public void setBcRequestsForReciverUserId(Set bcRequestsForReciverUserId) {
		this.bcRequestsForReciverUserId = bcRequestsForReciverUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set getMailConfigs() {
		return this.mailConfigs;
	}

	public void setMailConfigs(Set mailConfigs) {
		this.mailConfigs = mailConfigs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByUserId")
	public Set getUserSubscriptionsForUserId() {
		return this.userSubscriptionsForUserId;
	}

	public void setUserSubscriptionsForUserId(Set userSubscriptionsForUserId) {
		this.userSubscriptionsForUserId = userSubscriptionsForUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByLastEditBy")
	public Set getUserSubscriptionsForLastEditBy() {
		return this.userSubscriptionsForLastEditBy;
	}

	public void setUserSubscriptionsForLastEditBy(
			Set userSubscriptionsForLastEditBy) {
		this.userSubscriptionsForLastEditBy = userSubscriptionsForLastEditBy;
	}
	@Override
	public boolean equals(Object obj) {
		if (!(obj instanceof User))
			return false;
		if (this.getUserId() == ((User) obj).getUserId())
			return true;
		return false;
	}
}
